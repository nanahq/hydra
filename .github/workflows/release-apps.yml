name: Release Apps

on:
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APPS: 'notification-service,vendors-service,users-service,admin-service,listings-service,admin-gateway,api-gateway,vendor-gateway'

jobs:
  build:
    if: github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        app: [notification-service, vendors-service, users-service, admin-service, listings-service, admin-gateway, api-gateway, vendor-gateway ]
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve Tags
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        id: tags
        env:
          APP: ${{ matrix.app }}
        with:
          script: return require('./.github/scripts/release-tags.js')({ context })
          result-encoding: string

      - name: Build & Publish
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          push: true
          build-args: APP=${{ matrix.app }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.tags.outputs.result }}
          cache-from: type=registry,ref=ghcr.io/imagyne/aristotle:buildcache
          cache-to: type=registry,ref=ghcr.io/imagyne/aristotle:buildcache,mode=max

  report:
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
    name: Report
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Create Report
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        id: report
        with:
          script: return require('./.github/scripts/release-report.js')({ context })
          result-encoding: string

      - name: Post Report
        uses: marocchino/sticky-pull-request-comment@39c5b5dc7717447d0cba270cd115037d32d28443
        with:
          header: release
          message: ${{ steps.report.outputs.result }}
